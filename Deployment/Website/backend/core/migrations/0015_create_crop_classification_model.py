# Generated by Django 5.2 on 2025-05-11 15:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0014_remove_userprofile_theme_preference_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CropClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soil_n', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Nitrogen Level N (kg/ha)')),
                ('soil_p', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Phosphorus Level P (kg/ha)')),
                ('soil_k', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Potassium Level K (kg/ha)')),
                ('temperature', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Temperature (Â°C)')),
                ('humidity', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Humidity (%)')),
                ('ph', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Soil pH')),
                ('rainfall', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Rainfall (mm)')),
                ('area', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Area (ha)')),
                ('fertilizer_amount', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Fertilizer Amount (kg)')),
                ('pesticide_amount', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Pesticide Amount (kg)')),
                ('governorate', models.CharField(choices=[('Ariana', 'Ariana'), ('Beja', 'Beja'), ('Ben Arous', 'Ben Arous'), ('Bizerte', 'Bizerte'), ('Gabes', 'Gabes'), ('Gafsa', 'Gafsa'), ('Jendouba', 'Jendouba'), ('Kairouan', 'Kairouan'), ('Kasserine', 'Kasserine'), ('Kebili', 'Kebili'), ('Kef', 'Kef'), ('Mahdia', 'Mahdia'), ('Manouba', 'Manouba'), ('Medenine', 'Medenine'), ('Monastir', 'Monastir'), ('Nabeul', 'Nabeul'), ('Sfax', 'Sfax'), ('Sidi Bouzid', 'Sidi Bouzid'), ('Siliana', 'Siliana'), ('Sousse', 'Sousse'), ('Tataouine', 'Tataouine'), ('Tozeur', 'Tozeur'), ('Tunis', 'Tunis'), ('Zaghouan', 'Zaghouan')], max_length=50, verbose_name='Governorate')),
                ('district', models.CharField(blank=True, max_length=100, null=True, verbose_name='District')),
                ('irrigation', models.CharField(choices=[('Drip', 'Drip Irrigation'), ('Sprinkler', 'Sprinkler System'), ('Flood', 'Flood Irrigation'), ('Furrow', 'Furrow Irrigation'), ('None', 'No Irrigation')], max_length=20, verbose_name='Irrigation Method')),
                ('fertilizer_type', models.CharField(choices=[('Urea', 'Urea'), ('DAP', 'DAP'), ('NPK', 'NPK'), ('Organic', 'Organic'), ('Other', 'Other')], max_length=20, verbose_name='Fertilizer Type')),
                ('planting_season', models.CharField(choices=[('spring', 'Spring'), ('summer', 'Summer'), ('autumn', 'Autumn'), ('winter', 'Winter')], max_length=20, verbose_name='Planting Season')),
                ('growing_season', models.CharField(choices=[('spring', 'Spring'), ('summer', 'Summer'), ('autumn', 'Autumn'), ('winter', 'Winter')], max_length=20, verbose_name='Growing Season')),
                ('harvest_season', models.CharField(choices=[('spring', 'Spring'), ('summer', 'Summer'), ('autumn', 'Autumn'), ('winter', 'Winter')], max_length=20, verbose_name='Harvest Season')),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crop_classifications', to='core.farm')),
                ('recommended_crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classifications', to='core.crop')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
